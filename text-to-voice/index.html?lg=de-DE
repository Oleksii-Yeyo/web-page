<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Voiceover des Textes</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" />
    <!-- <link rel="stylesheet" href="./textToSpeachAutoplay.css"> -->

    <style>

body {
    padding: 1rem;
    height: 100vh;
    height: 100svh;

    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}

textarea {
    flex: 1;
}

.interface {
    display: flex;
    flex-direction: row;
    gap: 1rem;

    /* padding: 1rem; */
    justify-content: center;
    align-items: center;
}

.interface > * {
    /* background-color: azure; */
    height: 3rem;
    /* padding: 0; */
}

input[type="number"] {
    width: 5rem;
    /* display: block; */
    height: 100%;
}

select {
    flex: 0.15;
}

    </style>
</head>

<body>
    <h6 id="title"></h6>
    <textarea id="text-input" rows="10" cols="50"
        placeholder="Hier Text eingeben...">Entschuldigung, ich habe eine Frage.</textarea><br>
    <div class="interface">
        <!-- <label for="seconds">Sekunden warten:</label>
        <input type="number" min="0" title="Pause in Sekunden zwischen der Wiedergabe" value="3" name="seconds" id="seconds"> -->
        <label for="seconds">Sekunden warten:</label>
        <select id="seconds">
            <option selected value="0">0 s</option>
            <option value="3">3 s</option>
            <option value="10">10 s</option>
            <option value="30">30 s</option>
            <option value="60">60 s</option>
          </select>

        <button id="play-button">Auto</button>
        <button id="speak-button">Sprechen</button>

    </div>

    <script>
        const state = {
            // isPlayed: () => window.speechSynthesis.speaking,
            isPlayed: false,
            isAutoplayed: false,
            // delayInSec: 10,
            intervalAutoplay: null,
            utter: null
        }

        const speakBtn = document.getElementById('speak-button');
        const playBtn = document.getElementById('play-button');
        const secondsInp = document.getElementById('seconds');

        const title = document.getElementById('title');
        title.innerText = 'Text zur Stimme | Oleksii P Waiblingen 2024'


        const speak = function () {
            // if (state.utter) {return}
            const text = document.getElementById('text-input').value;
            var utterance = new SpeechSynthesisUtterance(text);
            state.utter = utterance;
            state.isAutoplayed = true;


            // Установка языка (например, English)
            // utterance.lang = 'en-EN';
            utterance.lang = 'de-DE';  // немецкий

            // Воспроизведение текста
            window.speechSynthesis.speak(utterance);

            utterance.addEventListener('end', (e) => setTimeout(() => {
                window.speechSynthesis.speak(utterance);
                e.stopPropagation();
                state.utter = null;
            }, +secondsInp.value * 1e3));
            // state.utter = null;
            // window.speechSynthesis.;
        }

        const simpleSpeak = function () {
            if (state.isAutoplayed) return;

            if (window.speechSynthesis.speaking) {
                window.speechSynthesis.cancel();
                speakBtn.innerText = 'Sprechen';
                return;
            }

            speakBtn.innerText = 'Stoppen';
            const text = document.getElementById('text-input').value;
            var utterance = new SpeechSynthesisUtterance(text);

            utterance.lang = 'de-DE';

            // Воспроизведение текста
            window.speechSynthesis.speak(utterance);

            utterance.addEventListener('end', () => {
                speakBtn.innerText = 'Sprechen';
                utterance.removeEventListener('end');
            })
        }

        speakBtn.addEventListener('click', simpleSpeak);

        const autoplay = () => {
            if (state.isPlayed) {
                state.isPlayed = false;
                state.isAutoplayed = false;
                window.speechSynthesis.cancel();
                playBtn.textContent = "Auto";
                state.utter.removeEventListener('end');
                state.utter = null;
                return;
            } else {
                speak();
                state.isPlayed = true;
                playBtn.textContent = "Stoppen";

            }
        }

        playBtn.addEventListener('click', autoplay);

    </script>
</body>

</html>
